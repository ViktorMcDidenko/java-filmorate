DROP TABLE IF EXISTS likes, friends, users, film_genre, films, genre, mpa;

CREATE TABLE IF NOT EXISTS mpa (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title VARCHAR(255) NOT NULL,
description VARCHAR(200),
release_date DATE,
duration INTEGER,
mpa INTEGER REFERENCES mpa(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
genre_id INTEGER REFERENCES genre(id) ON DELETE CASCADE,
PRIMARY KEY(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
login VARCHAR(255) NOT NULL,
name VARCHAR(200),
email VARCHAR(255) NOT NULL,
birthday DATE
);

CREATE TABLE IF NOT EXISTS friends (
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
friend_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
is_mutual BOOLEAN DEFAULT FALSE,
PRIMARY KEY(user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
film_id INTEGER NOT NULL REFERENCES films(id) ON DELETE CASCADE,
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY(film_id, user_id)
);